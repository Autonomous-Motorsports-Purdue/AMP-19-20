<?xml version="1.0"?>

<launch>

    <!--
    <node pkg="sensor_node_pkg" type="sensor_node_type" name="sensor_node_name" output="screen">
        <param name="sensor_param" value="param_value" />
    </node>
    -->

    <!-- velodyne sensor configuration -->
    <include file="$(find velodyne_pointcloud)/launch/VLP16_points.launch" />

    <!-- slice up the 3d point cloud into laserscan messages -->

    <node pkg="pointcloud_to_laserscan" type="pointcloud_to_laserscan_node" name="pointcloud_to_laserscan">
        <remap from="cloud_in" to="/velodyne_points"/>
        <remap from="scan" to="top/scan"/>
    </node>

    <!--
    <node pkg="kart_setup_odom_tf" type="tf_odom_broadcaster" name="odom_tf" output="screen">
    </node>
    -->

    <node pkg="kart_setup_lidar_tf" type="tf_broadcaster" name="robot_tf" output="screen">
    </node>


    <master auto="start"/>

    <!-- Run the map server --> 

    <node pkg="tf" type="static_transform_publisher" name="base_link_to_velodyne" args="0.40640 0.3683 0 0 0 0 /base_link /velodyne 100"/>

    <param name="pub_map_odom_transform" value="true"/>                                                                                                                                                 
    <param name="map_frame" value="map"/>
    <param name="base_frame" value="base_link"/>
    <param name="odom_frame" value="base_link"/>

    <node pkg="hector_mapping" type="hector_mapping" name="hector_mapping" output="screen">
        <rosparam file="$(find kart_2dnav)/params/hector_mapping_params.yaml" command="load" /> 
    </node>

    <!-- Run the laser_scan_matcher to get odom info from the LiDAR -->

    <node pkg="laser_scan_matcher" type="laser_scan_matcher_node" name="laser_scan_matcher_node" output="screen">
        <rosparm file="$(find kart_2dnav)/params/laser_scan_matcher_params.yaml" command="load" />
    </node>

    <!-- Run AMCL --> 

    <include file="$(find amcl)/examples/amcl_omni.launch" />

    <!-- Run the move_base to execute the navigation stack -->

    <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
        <rosparam file="$(find kart_2dnav)/params/costmap_common_params.yaml" command="load" ns="global_costmap" /> 
        <rosparam file="$(find kart_2dnav)/params/costmap_common_params.yaml" command="load" ns="local_costmap" />
        <rosparam file="$(find kart_2dnav)/params/local_costmap_params.yaml" command="load" />
        <rosparam file="$(find kart_2dnav)/params/global_costmap_params.yaml" command="load" /> 
        <rosparam file="$(find kart_2dnav)/params/teb_local_planner_params.yaml" command="load" />


        <param name="base_global_planner" value="global_planner/GlobalPlanner" />
        <param name="planner_frequency" value ="1.0" />
        <param name="planner_patience" value="5.0" />

        <param name="base_local_planner" value="teb_local_planner/TebLocalPlannerROS" />
        <param name="controller_frequency" value="5.0" />
        <param name="controller_patience" value="15.0" />

        <param name="clearing_rotation_allowed" value="false" />
    </node>

    <!-- Run the goal setting script to navigate in SLAM mode -->

    <!-- Launch rviz with the configuration file in order to visualize incoming data -->
    <!-- NOTE: Remove for when actually embedded into the Jetson -->

    <node name="rviz" pkg="rviz" type="rviz" args="-d $(find kart_2dnav)/params/kart_rviz.rviz" />

</launch>
