<?xml version="1.0"?>

<launch>

    <master auto="start"/>

    <!-- Run the map server --> 

    <node pkg="tf" type="static_transform_publisher" name="base_link_to_velodyne" args="0.40640 0.3683 0 0 0 0 /base_link /velodyne 100"/>

    <param name="pub_map_odom_transform" value="true"/>                                                                                                                                                 
    <param name="map_frame" value="map"/>
    <param name="base_frame" value="base_link"/>
    <param name="odom_frame" value="base_link"/>

    <node pkg="hector_mapping" type="hector_mapping" name="hector_mapping" output="screen">
        <param name="use_tf_scan_transformation" value="true" />
        <param name="use_tf_pose_start_estimate" value="false" />
        <param name="base_frame" value="base_link" />
        <param name="odom_frame" value="base_link" />
        <param name="pub_map_odom_transform" value="true" />
        <param name="scan_subscriber_queue_size" value="25" /> 
        <param name="map_resolution" value="0.050" />
        <param name="map_size" value="2048" />
        <param name="map_start_x" value="0.5" />
        <param name="map_start_y" value="0.5" />
        <param name="map_multi_res_levels" value="2" />
        <param name="update_factor_free" value="0.4" />
        <param name="update_factor_occupied" value="0.9" />
        <param name="map_update_distance_thresh" value="0.0006" />
        <param name="advertise_map_service" value="true" />
        <param name="scan_subscriber_queue_size" value="5" />
        <param name="scan_topic" value="top/scan" />
        <param name="tf_map_scanmatch_transform_frame_name" value="scanmatcher_frame" />
    </node>

    <!-- Run the laser_scan_matcher to get odom info from the LiDAR -->

    <node pkg="laser_scan_matcher" type="laser_scan_matcher_node" name="laser_scan_matcher_node" output="screen">
        <param name="base_frame"    value="base_link"/>
        <param name="_fixed_frame"  value="map"/>
        <param name="use_imu"       value="false"/>
        <param name="use_odom"      value="false"/>
        <param name="use_vel"       value="false"/>
        <param name="max_iterations" value="10"/>
        <param name="publish_tf"    value="false"/>
        <param name="publish_pose"  value="true"/>
    </node>

    <!-- Run AMCL --> 

    <include file="$(find amcl)/examples/amcl_omni.launch" />

    <!-- Run the move_base to execute the navigation stack -->

    <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
        <rosparam file="$(find kart_2dnav)/params/costmap_common_params.yaml" command="load" ns="global_costmap" /> 
        <rosparam file="$(find kart_2dnav)/params/costmap_common_params.yaml" command="load" ns="local_costmap" />
        <rosparam file="$(find kart_2dnav)/params/local_costmap_params.yaml" command="load" />
        <rosparam file="$(find kart_2dnav)/params/global_costmap_params.yaml" command="load" /> 
        <rosparam file="$(find kart_2dnav)/params/teb_local_planner_params.yaml" command="load" />


        <param name="base_global_planner" value="global_planner/GlobalPlanner" />
        <param name="planner_frequency" value ="1.0" />
        <param name="planner_patience" value="5.0" />

        <param name="base_local_planner" value="teb_local_planner/TebLocalPlannerROS" />
        <param name="controller_frequency" value="5.0" />
        <param name="controller_patience" value="15.0" />

            <param name="clearing_rotation_allowed" value="false" />
    </node>

    <!-- Run the goal setting script to navigate in SLAM mode -->

    <!-- Launch rviz with the configuration file in order to visualize incoming data -->
    <!-- NOTE: Remove for when actually embedded into the Jetson -->

    <node name="rviz" pkg="rviz" type="rviz" args="-d $(find kart_2dnav)/params/kart_rviz.rviz" />

</launch>
